////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Author: Someone who Implemented EyeLike
//
// Module: find_eye_corner.hpp
//
// Timeperiod:
//
// unknown: Version 1.0: Created
// 21-Feb-15: Version 1.0: Refactored and added functions.
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#ifndef __EYE_CORNER_HPP__
#define __EYE_CORNER_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include <cstdio>
#include <iostream>
#include <queue>

#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/objdetect/objdetect.hpp>

#include "constants.hpp"
#include "helpers.hpp"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#define kEyeLeft true
#define kEyeRight false

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void createCornerKernels();
cv::Mat eyeCornerMap(const cv::Mat& region, bool left, bool left2);
cv::Point2f findEyeCorner(cv::Mat region,bool left, bool left2);
cv::Point2f findSubpixelEyeCorner(cv::Mat region, cv::Point maxP);
void releaseCornerKernels();

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#endif // __EYE_CORNER_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

